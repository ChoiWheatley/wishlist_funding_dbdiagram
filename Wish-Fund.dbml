Table User {
  userId integer [pk, unique]
  userNick varchar [not null, unique]
  userPw varchar [not null]
  userName varchar [not null]
  userPhone varchar [not null, unique]
  userEmail varchar
  userBirth datetime
  userAcct varchar [unique]
  userImg integer [ref: > Image.imgId]
  regAt timestamp
  uptAt timestamp
  delAt timestamp
}

Table Address {
  addrId integer [pk, unique]
  userId integer [ref: > User.userId]
  addrAddr varchar [not null]
  addrDetl varchar
  addrNick varchar 
  isDef bool [default: false]
}

Table Friend {
  userId integer [pk, ref: > User.userId]
  frdId integer [pk, ref: > User.userId]
  status bit
  regAt timestamp
}

Table Funding {
  fundId integer [pk, unique]
  fundUser integer [ref: > User.userId]
  fundTitle varchar [not null]
  fundCont varchar [not null]
  fundTheme enum [not null]
  fundPubl bool [default: true]
  fundGoal integer [not null]
  fundSum integer [default: 0]
  fundAddr integer [not null, ref: > Address.addrId]
  endAt timestamp [not null]
  regAt timestamp
  uptAt timestamp
}

Table Comment {
  comId integer [pk]
  fundId integer [not null, ref: > Funding.fundId]
  authorId integer [not null, ref: > User.userId]
  content varchar [not null]
  regAt timestamp
  isMod bool [not null, default: false]
  isDel bool [not null, default: false]
}

Table Gift {
  giftId integer [pk, unique]
  fundId integer [ref: > Funding.fundId]
  giftUrl varchar [not null]
  giftCrd integer [not null]
  giftOpt varchar
  giftCont varchar
}

Table Donation {
  donId integer [pk, unique]
  fundId integer [ref: > Funding.fundId]
  userId integer [ref: > User.userId]
  orderId varchar [not null, unique] // 비회원이 후원한 경우 주문번호(order id)를 통해서 자신의 후원 정보를 볼 수 있어야 하기 때문.
  donAmnt integer [not null]
  regAt timestamp
}

Table RollingPaper {
  rollId integer [pk, ref: - Donation.donId]
  rollImg integer [ref: > Image.imgId]
  rollMsg varchar [default: '축하해요']
}

Table Notification {
  notiId integer [pk]
  recvId integer [not null, ref: > User.userId]
  sendId integer [not null, ref: > User.userId]
  notiType enum [not null]
  reqType enum [not null]
  subId integer
  notiTime timestamp
}

Table News {
  newsId integer [pk]
  userId integer [not null, ref: > User.userId]
  newsType enum [not null]
  newsTime timestamp
}

Table Gratitude {
  gratId integer [pk, ref: - Funding.fundId]
  gratTitle varchar [not null]
  gratCont varchar [not null]
}

Table Image {
  imgId integer [pk, not null]
  imgUrl varchar [not null]
  imgType enum
  subId integer 
}

Table Account {
  accId integer [pk, not null]
  bank  enum [not null]
  accNum string
}

Enum FundTheme {
  BIRTHDAY
  ANNIVERSARY
  DONATION
}

Enum NotiType {
  INCOMING_FOLLOW // 들어오는 친구 요청
  ACCEPT_FOLLOW // 내 요청에 대한 친구의 수락
  DUE_MY_FUNDING // 내 펀딩 마감
  SATISFYING_MY_FUNDING // 내 펀딩 달성
  DUE_DONATED_FUNDING // 내가 후원한 펀딩 마감
  WRITE_GRATITUDE // 감사인사 작성 권유
  CHECK_GRATITUDE // 내가 후원한 펀딩 감사인사 확인
  INCOMING_DONATION // 내 펀딩에 들어온 새로운 후원
}

Enum NotiType {
    IncomingFollow // = 'IncomingFollow' 들어오는 친구 요청
    AcceptFollow // = 'AcceptFollow' 내 요청에 대한 친구의 수락
    FundClose // = 'FundClose' 내 펀딩 마감 
    FundAchieve // = 'FundAchieve' 내 펀딩 달성
    NewDonate // = 'NewDonate' 내 펀딩에 들어온 새로운 후원
    DonatedFundClose // = 'DonatedFundClose' 내가 후원한 펀딩 마감
    WriteGratitude // = 'WriteGratitude' 감사인사 작성 권유
    CheckGratitude // = 'CheckGratitude' 내가 후원한 펀딩 감사인사 확인
}

Enum NewsType {
  NewFunding // 친구의 새로운 펀딩 개설
  DueFunding // 친구의 펀딩 마감기한 임박
  Gratitude // 친구의 펀딩 감사인사
}

Enum ImgType {
  Gratitude
  Gift
  Funding
  User
  RollingPaper
}

Enum BankType {
  Kakaobank
  Nonghyup
  Kookmin
  Shinhan
  Woori
  Ibk
  Hana
  Daegu
  Kyongnam
  Gwangju
  Busan
  Jeju
  Deutschebank
  Kdb
  Nfcf
  Kfcc
  Suhyup
  Nacufok
  Citybank
  Tossbank
  Scbank
  Kbank
}
